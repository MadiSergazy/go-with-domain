/**
 * Wild Workouts trainer
 * TODO
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import HourUpdate from '../model/HourUpdate';
import ModelDate from '../model/ModelDate';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getTrainerAvailableHours operation.
     * @callback module:api/DefaultApi~getTrainerAvailableHoursCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelDate>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Date} dateFrom 
     * @param {Date} dateTo 
     * @param {module:api/DefaultApi~getTrainerAvailableHoursCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelDate>}
     */
    getTrainerAvailableHours(dateFrom, dateTo, callback) {
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling getTrainerAvailableHours");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling getTrainerAvailableHours");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom,
        'dateTo': dateTo
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ModelDate];
      return this.apiClient.callApi(
        '/trainer/calendar', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the makeHourAvailable operation.
     * @callback module:api/DefaultApi~makeHourAvailableCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelDate>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/HourUpdate} hourUpdate todo
     * @param {module:api/DefaultApi~makeHourAvailableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelDate>}
     */
    makeHourAvailable(hourUpdate, callback) {
      let postBody = hourUpdate;
      // verify the required parameter 'hourUpdate' is set
      if (hourUpdate === undefined || hourUpdate === null) {
        throw new Error("Missing the required parameter 'hourUpdate' when calling makeHourAvailable");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ModelDate];
      return this.apiClient.callApi(
        '/trainer/calendar/make-hour-available', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the makeHourUnavailable operation.
     * @callback module:api/DefaultApi~makeHourUnavailableCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelDate>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/HourUpdate} hourUpdate todo
     * @param {module:api/DefaultApi~makeHourUnavailableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelDate>}
     */
    makeHourUnavailable(hourUpdate, callback) {
      let postBody = hourUpdate;
      // verify the required parameter 'hourUpdate' is set
      if (hourUpdate === undefined || hourUpdate === null) {
        throw new Error("Missing the required parameter 'hourUpdate' when calling makeHourUnavailable");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ModelDate];
      return this.apiClient.callApi(
        '/trainer/calendar/make-hour-unavailable', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
